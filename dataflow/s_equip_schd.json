{
	"name": "s_equip_schd",
	"properties": {
		"folder": {
			"name": "Equip Schd"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sql_eqip_schd",
						"type": "DatasetReference"
					},
					"name": "StgEquipSchd"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sql_eqip_schd_rej",
						"type": "DatasetReference"
					},
					"name": "EquipReject"
				},
				{
					"dataset": {
						"referenceName": "sql_eqip_schd_acpt",
						"type": "DatasetReference"
					},
					"name": "EquipAcpt"
				}
			],
			"transformations": [
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "RemoveADFColumns"
				},
				{
					"name": "AddADFColumns"
				},
				{
					"name": "AddADFColumns2"
				}
			],
			"script": "parameters{\n\trun_id as string ('')\n}\nsource(output(\n\t\tEQP_SCHED_ID as integer,\n\t\tAC_RGSTRN as string,\n\t\tSTS_CD as string,\n\t\tSTS_NAME as string,\n\t\tSTS_DESC as string,\n\t\tSTRT_TIME as string,\n\t\tEND_TIME as string,\n\t\tNOTE as string,\n\t\tIS_DELD as boolean,\n\t\tUPDTD_AT as string,\n\t\tADF_TIME_STMP as timestamp,\n\t\tADF_RUN_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> StgEquipSchd\nRemoveADFColumns split(isNull(AC_RGSTRN) || iif(isNull(END_TIME), false(), iif(isNull(STRT_TIME), false(), STRT_TIME>END_TIME)),\n\tdisjoint: false) ~> ConditionalSplit1@(Reject, FilteredData)\nStgEquipSchd select(mapColumn(\n\t\tEQP_SCHED_ID,\n\t\tAC_RGSTRN,\n\t\tSTS_CD,\n\t\tSTS_NAME,\n\t\tSTS_DESC,\n\t\tSTRT_TIME,\n\t\tEND_TIME,\n\t\tNOTE,\n\t\tIS_DELD,\n\t\tUPDTD_AT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveADFColumns\nConditionalSplit1@Reject derive(REJECT_REASON = \"Data Validation Error\",\n\t\tADF_TIME_STMP = currentTimestamp(),\n\t\tADF_RUN_ID = $run_id) ~> AddADFColumns\nConditionalSplit1@FilteredData derive(ADF_TIME_STMP = currentTimestamp(),\n\t\tADF_RUN_ID = $run_id) ~> AddADFColumns2\nAddADFColumns sink(input(\n\t\tEQP_SCHED_ID as integer,\n\t\tAC_RGSTRN as string,\n\t\tSTS_CD as string,\n\t\tSTS_NAME as string,\n\t\tSTS_DESC as string,\n\t\tSTRT_TIME as timestamp,\n\t\tEND_TIME as timestamp,\n\t\tNOTE as string,\n\t\tIS_DELD as boolean,\n\t\tUPDTD_AT as timestamp,\n\t\tREJECT_REASON as string,\n\t\tADF_TIME_STMP as timestamp,\n\t\tADF_RUN_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> EquipReject\nAddADFColumns2 sink(input(\n\t\tEQP_SCHED_ID as integer,\n\t\tAC_RGSTRN as string,\n\t\tSTS_CD as string,\n\t\tSTS_NAME as string,\n\t\tSTS_DESC as string,\n\t\tSTRT_TIME as timestamp,\n\t\tEND_TIME as timestamp,\n\t\tNOTE as string,\n\t\tIS_DELD as boolean,\n\t\tUPDTD_AT as timestamp,\n\t\tADF_TIME_STMP as timestamp,\n\t\tADF_RUN_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> EquipAcpt"
		}
	}
}